<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  
  <groupId>mvntestngframeworkgroup</groupId>
  <artifactId>mvntestngframework</artifactId>
  <version>0.0.1-SNAPSHOT</version>
   <name>fdautomation</name>
  <url>http://maven.apache.org</url>
 <properties>
<!--  Tell the GitHub site-maven-plugin about the new server you just configured by adding the following to your pom -->
  <!-- github server corresponds to entry in ~/.m2/settings.xml -->
 	<github.global.server>github</github.global.server>
   <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
   <maven.compiler.source>1.8</maven.compiler.source>
   <maven.compiler.target>1.8</maven.compiler.target>
   
 </properties>
  
  
  <build>
	<plugins>
<!-- 		<plugin> -->
<!-- 			<groupId>org.apache.maven.plugins</groupId> -->
<!-- 			<artifactId>maven-surefire-plugin</artifactId> -->
<!-- 			<version>3.0.0-M4</version> -->
<!-- 			<configuration> -->
<!-- 				<suiteXmlFiles> -->
<!-- 					<suiteXmlFile>testNG.xml</suiteXmlFile> -->
<!-- 				</suiteXmlFiles> -->
<!-- 			</configuration> -->
<!-- 		</plugin> -->
<!-- First, tell maven to deploy artifacts to a temporary staging location inside your target directory -->	
	 <plugin>
        <artifactId>maven-deploy-plugin</artifactId>
        <version>2.8.1</version>
        <configuration>
            <altDeploymentRepository>internal.repo::default::file://${project.build.directory}/mvn-repo</altDeploymentRepository>
        </configuration>
    </plugin>

<!-- Finally, configure the site-maven-plugin to upload from your temporary staging repo to your mvn-repo branch on Github: -->

		<plugin>
            <groupId>com.github.github</groupId>
            <artifactId>site-maven-plugin</artifactId>
            <version>0.12</version>
            <configuration>
                <message>Maven artifacts for ${project.version}</message>  <!-- git commit message -->
                <noJekyll>true</noJekyll>                                  <!-- disable webpage processing -->
                <outputDirectory>${project.build.directory}/mvn-repo</outputDirectory> <!-- matches distribution management repository url above -->
                <branch>refs/heads/mvn-repo</branch>                       <!-- remote branch name -->
				<merge>true</merge>               
                <includes><include>**/*</include></includes>
                <repositoryName>mvntestngframework</repositoryName>      	<!-- github repo name -->
                <repositoryOwner>dipumrj</repositoryOwner>    				<!-- github username  -->
            </configuration>
            <executions>
              <!-- run site-maven-plugin's 'site' target as part of the build's normal 'deploy' phase -->
              <execution>
                <goals>
                  <goal>site</goal>
                </goals>
                <phase>deploy</phase>
              </execution>
            </executions>
        </plugin>
	
	    

	</plugins>
<!-- 	<extensions> -->
<!-- 		<extension> -->
<!-- 			<groupId>org.apache.maven.wagon</groupId> -->
<!-- 			<artifactId>wagon-webdav-jackrabbit</artifactId> -->
<!-- 			<version>1.0-beta-7</version> -->
<!-- 		</extension> -->
<!-- 	</extensions> -->
	</build>
  
     
 <repositories>
<!--     <repository> -->
<!--       <id>mvntestngrepo.read</id> -->
<!--       <url>https://github.com/dipumrj/mvntestngframework</url> -->
<!--     </repository> -->

	<repository>
        <id>mvntestngframework-mvn-repo</id>
        <url>https://raw.github.com/dipumrj/mvntestngframework/mvn-repo/</url>
        <snapshots>
            <enabled>true</enabled>
            <updatePolicy>always</updatePolicy>
        </snapshots>
    </repository>
      
 </repositories>
 
  <distributionManagement>
<!--     <repository> -->
<!--      <id>deploymentRepo</id> -->
<!--      <url>https://github.com/dipumrj/mvntestngframework</url> -->
<!--     </repository> -->

<!-- First, tell maven to deploy artifacts to a temporary staging location inside your target directory -->

	<repository>
        <id>internal.repo</id>
        <name>Temporary Staging Repository</name>
        <url>file://${project.build.directory}/mvn-repo</url>
    </repository>

    </distributionManagement>
  
  
  
  
  
  <!-- 	   Alternative Compiler with in build-->
<!-- 		<plugin> -->
<!-- 			<groupId>org.apache.maven.plugins</groupId> -->
<!-- 			<artifactId>maven-compiler-plugin</artifactId> -->
<!-- 			<version>3.8.1</version> -->
<!-- 			<configuration> -->
<!-- 				<source>1.8</source> -->
<!-- 				<target>1.8</target> -->
<!-- 			</configuration> -->
<!-- 		</plugin> -->

  <dependencies>
  <dependency>
  <groupId>com.paulhammant</groupId>
  <artifactId>ngwebdriver</artifactId>
  <version>1.1.5</version>
</dependency>
     
    <!-- https://mvnrepository.com/artifact/org.seleniumhq.selenium/selenium-java -->
<dependency>
    <groupId>org.seleniumhq.selenium</groupId>
    <artifactId>selenium-java</artifactId>
    <version>3.141.5</version>
</dependency>
<!-- https://mvnrepository.com/artifact/org.testng/testng -->
<dependency>
    <groupId>org.testng</groupId>
    <artifactId>testng</artifactId>
    <version>6.14.3</version>
</dependency>

<!-- https://mvnrepository.com/artifact/org.sikuli/sikuli-api -->
<dependency>
    <groupId>org.sikuli</groupId>
    <artifactId>sikuli-api</artifactId>
    <version>1.2.0</version>
</dependency>
<!-- https://mvnrepository.com/artifact/commons-io/commons-io -->
<dependency>
    <groupId>commons-io</groupId>
    <artifactId>commons-io</artifactId>
    <version>2.6</version>
</dependency>
<!-- https://mvnrepository.com/artifact/com.assertthat/selenium-shutterbug -->
<dependency>
    <groupId>com.assertthat</groupId>
    <artifactId>selenium-shutterbug</artifactId>
    <version>0.9.3</version>
</dependency>

<!-- https://mvnrepository.com/artifact/log4j/log4j -->
<dependency>
    <groupId>log4j</groupId>
    <artifactId>log4j</artifactId>
    <version>1.2.17</version>
</dependency>

<!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java -->
<dependency>
    <groupId>mysql</groupId>
    <artifactId>mysql-connector-java</artifactId>
    <version>5.1.38</version>
</dependency>

   
   <!-- https://mvnrepository.com/artifact/com.opencsv/opencsv -->
<dependency>
    <groupId>com.opencsv</groupId>
    <artifactId>opencsv</artifactId>
    <version>4.0</version>
</dependency>


<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/maven-clean-plugin -->
<dependency>
    <groupId>org.apache.maven.plugins</groupId>
    <artifactId>maven-clean-plugin</artifactId>
    <version>2.5</version>
</dependency>


<!-- https://mvnrepository.com/artifact/org.apache.maven.plugins/ -->
<dependency>
    <groupId>org.apache.maven.plugins</groupId>
    <artifactId>maven-compiler-plugin</artifactId>
    <version>3.1</version>
    
</dependency>



</dependencies>
    
  
  
</project>